package testcasesupport;

import javax.servlet.http.*;

public class ServletMain extends HttpServlet {

	private static final long serialVersionUID = 1L; /* needed since Servlets are serializable */
	
	

	public void doPost(HttpServletRequest request, HttpServletResponse response) {
		doGet(request, response);
	}

	public void doGet(HttpServletRequest request, HttpServletResponse response) {
		doGetCWE1(request, response);
		doGetCWE2(request, response);
		doGetCWE3(request, response);
		doGetCWE4(request, response);
		doGetCWE5(request, response);
		doGetCWE6(request, response);
		doGetCWE7(request, response);
		doGetCWE8(request, response);
		doGetCWE9(request, response);
	}
	
	private static void doGetCWE1(HttpServletRequest request, HttpServletResponse response) {
		try {
			/* BEGIN-AUTOGENERATED-SERVLET-TESTS-1 */
			(new testcases.CWE113_HTTP_Response_Splitting.CWE113_HTTP_Response_Splitting__connect_tcp_addCookieServlet_06()).runTest(request, response);
			(new testcases.CWE113_HTTP_Response_Splitting.CWE113_HTTP_Response_Splitting__connect_tcp_addHeaderServlet_16()).runTest(request, response);
			(new testcases.CWE113_HTTP_Response_Splitting.CWE113_HTTP_Response_Splitting__connect_tcp_sendRedirectServlet_31()).runTest(request, response);
			(new testcases.CWE113_HTTP_Response_Splitting.CWE113_HTTP_Response_Splitting__connect_tcp_setHeaderServlet_07()).runTest(request, response);
			(new testcases.CWE113_HTTP_Response_Splitting.CWE113_HTTP_Response_Splitting__console_readLine_addCookieServlet_14()).runTest(request, response);
			(new testcases.CWE113_HTTP_Response_Splitting.CWE113_HTTP_Response_Splitting__console_readLine_addHeaderServlet_12()).runTest(request, response);
			(new testcases.CWE113_HTTP_Response_Splitting.CWE113_HTTP_Response_Splitting__console_readLine_sendRedirectServlet_16()).runTest(request, response);
			(new testcases.CWE113_HTTP_Response_Splitting.CWE113_HTTP_Response_Splitting__console_readLine_setHeaderServlet_41()).runTest(request, response);
			(new testcases.CWE113_HTTP_Response_Splitting.CWE113_HTTP_Response_Splitting__Environment_addCookieServlet_16()).runTest(request, response);
			(new testcases.CWE113_HTTP_Response_Splitting.CWE113_HTTP_Response_Splitting__Environment_addHeaderServlet_16()).runTest(request, response);
			(new testcases.CWE113_HTTP_Response_Splitting.CWE113_HTTP_Response_Splitting__Environment_sendRedirectServlet_51a()).runTest(request, response);
			(new testcases.CWE113_HTTP_Response_Splitting.CWE113_HTTP_Response_Splitting__Environment_setHeaderServlet_15()).runTest(request, response);
			(new testcases.CWE113_HTTP_Response_Splitting.CWE113_HTTP_Response_Splitting__fromDB_addCookieServlet_13()).runTest(request, response);
			(new testcases.CWE113_HTTP_Response_Splitting.CWE113_HTTP_Response_Splitting__fromDB_sendRedirectServlet_61a()).runTest(request, response);
			(new testcases.CWE113_HTTP_Response_Splitting.CWE113_HTTP_Response_Splitting__fromFile_addCookieServlet_07()).runTest(request, response);
			(new testcases.CWE113_HTTP_Response_Splitting.CWE113_HTTP_Response_Splitting__fromFile_addHeaderServlet_11()).runTest(request, response);
			(new testcases.CWE113_HTTP_Response_Splitting.CWE113_HTTP_Response_Splitting__fromFile_sendRedirectServlet_12()).runTest(request, response);
			(new testcases.CWE113_HTTP_Response_Splitting.CWE113_HTTP_Response_Splitting__fromFile_setHeaderServlet_16()).runTest(request, response);
			(new testcases.CWE113_HTTP_Response_Splitting.CWE113_HTTP_Response_Splitting__getCookiesServlet_addCookieServlet_06()).runTest(request, response);
			(new testcases.CWE113_HTTP_Response_Splitting.CWE113_HTTP_Response_Splitting__getCookiesServlet_addHeaderServlet_12()).runTest(request, response);
			(new testcases.CWE113_HTTP_Response_Splitting.CWE113_HTTP_Response_Splitting__getCookiesServlet_sendRedirectServlet_14()).runTest(request, response);
			(new testcases.CWE113_HTTP_Response_Splitting.CWE113_HTTP_Response_Splitting__getParameterServlet_addCookieServlet_05()).runTest(request, response);
			(new testcases.CWE113_HTTP_Response_Splitting.CWE113_HTTP_Response_Splitting__getParameterServlet_addHeaderServlet_17()).runTest(request, response);
			(new testcases.CWE113_HTTP_Response_Splitting.CWE113_HTTP_Response_Splitting__getParameterServlet_sendRedirectServlet_19()).runTest(request, response);
			(new testcases.CWE113_HTTP_Response_Splitting.CWE113_HTTP_Response_Splitting__getParameterServlet_setHeaderServlet_51a()).runTest(request, response);
			(new testcases.CWE113_HTTP_Response_Splitting.CWE113_HTTP_Response_Splitting__getQueryStringServlet_addCookieServlet_06()).runTest(request, response);
			(new testcases.CWE113_HTTP_Response_Splitting.CWE113_HTTP_Response_Splitting__getQueryStringServlet_addCookieServlet_17()).runTest(request, response);
			(new testcases.CWE113_HTTP_Response_Splitting.CWE113_HTTP_Response_Splitting__getQueryStringServlet_addHeaderServlet_11()).runTest(request, response);
			(new testcases.CWE113_HTTP_Response_Splitting.CWE113_HTTP_Response_Splitting__getQueryStringServlet_sendRedirectServlet_15()).runTest(request, response);
			(new testcases.CWE113_HTTP_Response_Splitting.CWE113_HTTP_Response_Splitting__getQueryStringServlet_sendRedirectServlet_31()).runTest(request, response);
			(new testcases.CWE113_HTTP_Response_Splitting.CWE113_HTTP_Response_Splitting__getQueryStringServlet_sendRedirectServlet_41()).runTest(request, response);

			/* END-AUTOGENERATED-SERVLET-TESTS-1 */
		} catch (Throwable t) {

			/* this will only happen on an IOException or something (the runTest for the test cases will catch any exceptions from the test cases).  So, we just abort
			 * and write to the console (since we can't write to the response without possibly throwing another exception)
			 */
			
			System.out.println(
					" Caught thowable from doGetCWE1 ");

			System.out.println(" Throwable's message = " + t.getMessage());
			
			System.out.println("Stack trace below");

			StackTraceElement stes[] = t.getStackTrace();

			for (StackTraceElement ste : stes) {
				System.out.println("  " + ste.toString());
			} 
		}
	}
		
	private static void doGetCWE2(HttpServletRequest request, HttpServletResponse response) {
		try {
			/* BEGIN-AUTOGENERATED-SERVLET-TESTS-2 */
			(new testcases.CWE23_Relative_Path_Traversal.CWE23_Relative_Path_Traversal__getCookiesServlet_41()).runTest(request, response);
			(new testcases.CWE23_Relative_Path_Traversal.CWE23_Relative_Path_Traversal__getParameterServlet_07()).runTest(request, response);
			(new testcases.CWE23_Relative_Path_Traversal.CWE23_Relative_Path_Traversal__getQueryStringServlet_45()).runTest(request, response);
			(new testcases.CWE257_Storing_Password_Recoverable_Format.CWE257_Storing_Password_Recoverable_Format__Servlet_connect_tcp_68a()).runTest(request, response);
			(new testcases.CWE257_Storing_Password_Recoverable_Format.CWE257_Storing_Password_Recoverable_Format__Servlet_connect_tcp_71a()).runTest(request, response);
			(new testcases.CWE293_Using_Referer_Field_for_Authentication.CWE293_Using_Referer_Field_for_Authentication__Servlet_03()).runTest(request, response);
			(new testcases.CWE293_Using_Referer_Field_for_Authentication.CWE293_Using_Referer_Field_for_Authentication__Servlet_04()).runTest(request, response);

			/* END-AUTOGENERATED-SERVLET-TESTS-2 */
		} catch (Throwable t) {

			/* this will only happen on an IOException or something (the runTest for the test cases will catch any exceptions from the test cases).  So, we just abort
			 * and write to the console (since we can't write to the response without possibly throwing another exception)
			 */
			
			System.out.println(
					" Caught thowable from doGetCWE2 ");

			System.out.println(" Throwable's message = " + t.getMessage());
			
			System.out.println("Stack trace below");

			StackTraceElement stes[] = t.getStackTrace();

			for (StackTraceElement ste : stes) {
				System.out.println("  " + ste.toString());
			} 
		}
	}
		
	private static void doGetCWE3(HttpServletRequest request, HttpServletResponse response) {
		try {
			/* BEGIN-AUTOGENERATED-SERVLET-TESTS-3 */
			(new testcases.CWE36_Absolute_Path_Traversal.CWE36_Absolute_Path_Traversal__getCookiesServlet_13()).runTest(request, response);
			(new testcases.CWE36_Absolute_Path_Traversal.CWE36_Absolute_Path_Traversal__getParameterServlet_42()).runTest(request, response);
			(new testcases.CWE36_Absolute_Path_Traversal.CWE36_Absolute_Path_Traversal__getQueryStringServlet_19()).runTest(request, response);
			(new testcases.CWE315_Plaintext_Storage_in_a_Cookie.CWE315_Plaintext_Storage_in_a_Cookie__Servlet_06()).runTest(request, response);
			(new testcases.CWE315_Plaintext_Storage_in_a_Cookie.CWE315_Plaintext_Storage_in_a_Cookie__Servlet_07()).runTest(request, response);
			(new testcases.CWE319_Plaintext_Tx_Sensitive_Info.CWE319_Plaintext_Tx_Sensitive_Info__Servlet_07()).runTest(request, response);
			(new testcases.CWE319_Plaintext_Tx_Sensitive_Info.CWE319_Plaintext_Tx_Sensitive_Info__Servlet_08()).runTest(request, response);
			(new testcases.CWE352_Cross_Site_Request_Forgery.CWE352_Cross_Site_Request_Forgery__getCookiesServlet_07()).runTest(request, response);
			(new testcases.CWE352_Cross_Site_Request_Forgery.CWE352_Cross_Site_Request_Forgery__getCookiesServlet_16()).runTest(request, response);
			(new testcases.CWE352_Cross_Site_Request_Forgery.CWE352_Cross_Site_Request_Forgery__getCookiesServlet_17()).runTest(request, response);
			(new testcases.CWE352_Cross_Site_Request_Forgery.CWE352_Cross_Site_Request_Forgery__getParameterServlet_14()).runTest(request, response);
			(new testcases.CWE352_Cross_Site_Request_Forgery.CWE352_Cross_Site_Request_Forgery__getParameterServlet_42()).runTest(request, response);
			(new testcases.CWE352_Cross_Site_Request_Forgery.CWE352_Cross_Site_Request_Forgery__getQueryStringServlet_03()).runTest(request, response);
			(new testcases.CWE352_Cross_Site_Request_Forgery.CWE352_Cross_Site_Request_Forgery__getQueryStringServlet_71a()).runTest(request, response);



			/* END-AUTOGENERATED-SERVLET-TESTS-3 */
		} catch (Throwable t) {

			/* this will only happen on an IOException or something (the runTest for the test cases will catch any exceptions from the test cases).  So, we just abort
			 * and write to the console (since we can't write to the response without possibly throwing another exception)
			 */
			
			System.out.println(
					" Caught thowable from doGetCWE3 ");

			System.out.println(" Throwable's message = " + t.getMessage());
			
			System.out.println("Stack trace below");

			StackTraceElement stes[] = t.getStackTrace();

			for (StackTraceElement ste : stes) {
				System.out.println("  " + ste.toString());
			} 
		}
	}

	private static void doGetCWE4(HttpServletRequest request, HttpServletResponse response) {
		try {
			/* BEGIN-AUTOGENERATED-SERVLET-TESTS-4 */

			/* END-AUTOGENERATED-SERVLET-TESTS-4 */
		} catch (Throwable t) {

			/* this will only happen on an IOException or something (the runTest for the test cases will catch any exceptions from the test cases).  So, we just abort
			 * and write to the console (since we can't write to the response without possibly throwing another exception)
			 */
			
			System.out.println(
					" Caught thowable from doGetCWE4 ");

			System.out.println(" Throwable's message = " + t.getMessage());
			
			System.out.println("Stack trace below");

			StackTraceElement stes[] = t.getStackTrace();

			for (StackTraceElement ste : stes) {
				System.out.println("  " + ste.toString());
			} 
		}
	}
		
	private static void doGetCWE5(HttpServletRequest request, HttpServletResponse response) {
		try {
			/* BEGIN-AUTOGENERATED-SERVLET-TESTS-5 */
			(new testcases.CWE523_Unprotected_Cred_Transport.CWE523_Unprotected_Cred_Transport__Servlet_41()).runTest(request, response);
			(new testcases.CWE523_Unprotected_Cred_Transport.CWE523_Unprotected_Cred_Transport__Servlet_42()).runTest(request, response);
			(new testcases.CWE549_Missing_Password_Masking.CWE549_Missing_Password_Masking__Servlet_12()).runTest(request, response);
			(new testcases.CWE549_Missing_Password_Masking.CWE549_Missing_Password_Masking__Servlet_13()).runTest(request, response);
			(new testcases.CWE566_Access_Through_SQL_Primary.CWE566_Access_Through_SQL_Primary__Servlet_01()).runTest(request, response);
			(new testcases.CWE566_Access_Through_SQL_Primary.CWE566_Access_Through_SQL_Primary__Servlet_03()).runTest(request, response);
			(new testcases.CWE566_Access_Through_SQL_Primary.CWE566_Access_Through_SQL_Primary__Servlet_05()).runTest(request, response);
			(new testcases.CWE566_Access_Through_SQL_Primary.CWE566_Access_Through_SQL_Primary__Servlet_07()).runTest(request, response);
			(new testcases.CWE566_Access_Through_SQL_Primary.CWE566_Access_Through_SQL_Primary__Servlet_09()).runTest(request, response);
			(new testcases.CWE566_Access_Through_SQL_Primary.CWE566_Access_Through_SQL_Primary__Servlet_12()).runTest(request, response);
			(new testcases.CWE566_Access_Through_SQL_Primary.CWE566_Access_Through_SQL_Primary__Servlet_14()).runTest(request, response);
			(new testcases.CWE566_Access_Through_SQL_Primary.CWE566_Access_Through_SQL_Primary__Servlet_16()).runTest(request, response);
			(new testcases.CWE566_Access_Through_SQL_Primary.CWE566_Access_Through_SQL_Primary__Servlet_19()).runTest(request, response);
			(new testcases.CWE566_Access_Through_SQL_Primary.CWE566_Access_Through_SQL_Primary__Servlet_66a()).runTest(request, response);
			(new testcases.CWE567_Unsynchronized_Shared_Data.CWE567_Unsynchronized_Shared_Data__Servlet_01()).runTest(request, response);
			(new testcases.CWE598_Information_Leak_QueryString.CWE598_Information_Leak_QueryString__Servlet_07()).runTest(request, response);
			(new testcases.CWE598_Information_Leak_QueryString.CWE598_Information_Leak_QueryString__Servlet_08()).runTest(request, response);

			/* END-AUTOGENERATED-SERVLET-TESTS-5 */
		} catch (Throwable t) {

			/* this will only happen on an IOException or something (the runTest for the test cases will catch any exceptions from the test cases).  So, we just abort
			 * and write to the console (since we can't write to the response without possibly throwing another exception)
			 */
			
			System.out.println(
					" Caught thowable from doGetCWE5 ");

			System.out.println(" Throwable's message = " + t.getMessage());
			
			System.out.println("Stack trace below");

			StackTraceElement stes[] = t.getStackTrace();

			for (StackTraceElement ste : stes) {

				System.out.println("  " + ste.toString());
			} 
		}
	}		
		
	private static void doGetCWE6(HttpServletRequest request, HttpServletResponse response) {
		try {
			/* BEGIN-AUTOGENERATED-SERVLET-TESTS-6 */
			(new testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_connect_tcp_02()).runTest(request, response);
			(new testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_console_readLine_45()).runTest(request, response);
			(new testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_Environment_08()).runTest(request, response);
			(new testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_fromDB_11()).runTest(request, response);
			(new testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_fromFile_17()).runTest(request, response);
			(new testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_getCookiesServlet_13()).runTest(request, response);
			(new testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_getParameterServlet_06()).runTest(request, response);
			(new testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_getParameterServlet_19()).runTest(request, response);
			(new testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_getParameterServlet_31()).runTest(request, response);
			(new testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_getQueryStringServlet_45()).runTest(request, response);
			(new testcases.CWE601_Open_Redirect.CWE601_Open_Redirect__Servlet_listen_tcp_14()).runTest(request, response);
			(new testcases.CWE603_Client_Side_Authentication.CWE603_Client_Side_Authentication__Servlet_07()).runTest(request, response);
			(new testcases.CWE603_Client_Side_Authentication.CWE603_Client_Side_Authentication__Servlet_08()).runTest(request, response);
			(new testcases.CWE613_Insufficient_Session_Expiration.CWE613_Insufficient_Session_Expiration__Servlet_17()).runTest(request, response);
			(new testcases.CWE613_Insufficient_Session_Expiration.CWE613_Insufficient_Session_Expiration__Servlet_19()).runTest(request, response);
			(new testcases.CWE614_Sensitive_Cookie_Without_Secure.CWE614_Sensitive_Cookie_Without_Secure__Servlet_13()).runTest(request, response);
			(new testcases.CWE614_Sensitive_Cookie_Without_Secure.CWE614_Sensitive_Cookie_Without_Secure__Servlet_14()).runTest(request, response);
			(new testcases.CWE615_Info_Leak_By_Comment.CWE615_Info_Leak_By_Comment__Servlet_07()).runTest(request, response);
			(new testcases.CWE615_Info_Leak_By_Comment.CWE615_Info_Leak_By_Comment__Servlet_08()).runTest(request, response);
			(new testcases.CWE643_Unsafe_Treatment_of_XPath_Input.CWE643_Unsafe_Treatment_of_XPath_Input__getQueryStringServlet_68a()).runTest(request, response);
			(new testcases.CWE643_Unsafe_Treatment_of_XPath_Input.CWE643_Unsafe_Treatment_of_XPath_Input__getQueryStringServlet_71a()).runTest(request, response);
			(new testcases.CWE674_Uncontrolled_Recursion.CWE674_Uncontrolled_Recursion__Servlet_01()).runTest(request, response);
			(new testcases.CWE698_Redirect_Without_Exit.CWE698_Redirect_Without_Exit__Servlet_15()).runTest(request, response);
			(new testcases.CWE698_Redirect_Without_Exit.CWE698_Redirect_Without_Exit__Servlet_16()).runTest(request, response);

			/* END-AUTOGENERATED-SERVLET-TESTS-6 */
		} catch (Throwable t) {

			/* this will only happen on an IOException or something (the runTest for the test cases will catch any exceptions from the test cases).  So, we just abort
			 * and write to the console (since we can't write to the response without possibly throwing another exception)
			 */
			
			System.out.println(
					" Caught thowable from doGetCWE6 ");

			System.out.println(" Throwable's message = " + t.getMessage());
			
			System.out.println("Stack trace below");

			StackTraceElement stes[] = t.getStackTrace();

			for (StackTraceElement ste : stes) {
				System.out.println("  " + ste.toString());
			} 
		}
	}

	private static void doGetCWE7(HttpServletRequest request, HttpServletResponse response) {
		try {
			/* BEGIN-AUTOGENERATED-SERVLET-TESTS-7 */

			/* END-AUTOGENERATED-SERVLET-TESTS-7 */
		} catch (Throwable t) {

			/* this will only happen on an IOException or something (the runTest for the test cases will catch any exceptions from the test cases).  So, we just abort
			 * and write to the console (since we can't write to the response without possibly throwing another exception)
			 */
			
			System.out.println(
					" Caught thowable from doGetCWE7 ");

			System.out.println(" Throwable's message = " + t.getMessage());
			
			System.out.println("Stack trace below");

			StackTraceElement stes[] = t.getStackTrace();

			for (StackTraceElement ste : stes) {
				System.out.println("  " + ste.toString());
			} 
		}
	}		
	
	private static void doGetCWE8(HttpServletRequest request, HttpServletResponse response) {
		try {
			/* BEGIN-AUTOGENERATED-SERVLET-TESTS-8 */
			(new testcases.CWE80_XSS.CWE80_XSS__Servlet_connect_tcp_08()).runTest(request, response);
			(new testcases.CWE80_XSS.CWE80_XSS__Servlet_console_readLine_41()).runTest(request, response);
			(new testcases.CWE80_XSS.CWE80_XSS__Servlet_Environment_31()).runTest(request, response);
			(new testcases.CWE80_XSS.CWE80_XSS__Servlet_fromDB_07()).runTest(request, response);
			(new testcases.CWE80_XSS.CWE80_XSS__Servlet_fromDB_08()).runTest(request, response);
			(new testcases.CWE80_XSS.CWE80_XSS__Servlet_fromFile_17()).runTest(request, response);
			(new testcases.CWE80_XSS.CWE80_XSS__Servlet_getCookiesServlet_01()).runTest(request, response);
			(new testcases.CWE80_XSS.CWE80_XSS__Servlet_getParameterServlet_08()).runTest(request, response);
			(new testcases.CWE80_XSS.CWE80_XSS__Servlet_getQueryStringServlet_31()).runTest(request, response);
			(new testcases.CWE80_XSS.CWE80_XSS__Servlet_listen_tcp_16()).runTest(request, response);
			(new testcases.CWE81_XSS_Error_Message.CWE81_XSS_Error_Message__Servlet_connect_tcp_07()).runTest(request, response);
			(new testcases.CWE81_XSS_Error_Message.CWE81_XSS_Error_Message__Servlet_console_readLine_04()).runTest(request, response);
			(new testcases.CWE81_XSS_Error_Message.CWE81_XSS_Error_Message__Servlet_Environment_05()).runTest(request, response);
			(new testcases.CWE81_XSS_Error_Message.CWE81_XSS_Error_Message__Servlet_fromDB_08()).runTest(request, response);
			(new testcases.CWE81_XSS_Error_Message.CWE81_XSS_Error_Message__Servlet_fromFile_09()).runTest(request, response);
			(new testcases.CWE81_XSS_Error_Message.CWE81_XSS_Error_Message__Servlet_fromFile_10()).runTest(request, response);
			(new testcases.CWE81_XSS_Error_Message.CWE81_XSS_Error_Message__Servlet_fromFile_15()).runTest(request, response);
			(new testcases.CWE81_XSS_Error_Message.CWE81_XSS_Error_Message__Servlet_getCookiesServlet_11()).runTest(request, response);
			(new testcases.CWE81_XSS_Error_Message.CWE81_XSS_Error_Message__Servlet_getParameterServlet_51a()).runTest(request, response);
			(new testcases.CWE81_XSS_Error_Message.CWE81_XSS_Error_Message__Servlet_getQueryStringServlet_10()).runTest(request, response);
			(new testcases.CWE81_XSS_Error_Message.CWE81_XSS_Error_Message__Servlet_listen_tcp_14()).runTest(request, response);
			(new testcases.CWE83_XSS_Attribute.CWE83_XSS_Attribute__Servlet_connect_tcp_10()).runTest(request, response);
			(new testcases.CWE83_XSS_Attribute.CWE83_XSS_Attribute__Servlet_console_readLine_42()).runTest(request, response);
			(new testcases.CWE83_XSS_Attribute.CWE83_XSS_Attribute__Servlet_Environment_08()).runTest(request, response);
			(new testcases.CWE83_XSS_Attribute.CWE83_XSS_Attribute__Servlet_fromDB_14()).runTest(request, response);
			(new testcases.CWE83_XSS_Attribute.CWE83_XSS_Attribute__Servlet_fromFile_06()).runTest(request, response);
			(new testcases.CWE83_XSS_Attribute.CWE83_XSS_Attribute__Servlet_getCookiesServlet_11()).runTest(request, response);
			(new testcases.CWE83_XSS_Attribute.CWE83_XSS_Attribute__Servlet_getCookiesServlet_12()).runTest(request, response);
			(new testcases.CWE83_XSS_Attribute.CWE83_XSS_Attribute__Servlet_getCookiesServlet_42()).runTest(request, response);
			(new testcases.CWE83_XSS_Attribute.CWE83_XSS_Attribute__Servlet_getParameterServlet_52a()).runTest(request, response);
			(new testcases.CWE83_XSS_Attribute.CWE83_XSS_Attribute__Servlet_listen_tcp_41()).runTest(request, response);
			(new testcases.CWE89_SQL_Injection.CWE89_SQL_Injection__getCookiesServlet_executeBatch_14()).runTest(request, response);
			(new testcases.CWE89_SQL_Injection.CWE89_SQL_Injection__getCookiesServlet_executeUpdate_05()).runTest(request, response);
			(new testcases.CWE89_SQL_Injection.CWE89_SQL_Injection__getCookiesServlet_execute_04()).runTest(request, response);
			(new testcases.CWE89_SQL_Injection.CWE89_SQL_Injection__getParameterServlet_executeBatch_51a()).runTest(request, response);
			(new testcases.CWE89_SQL_Injection.CWE89_SQL_Injection__getParameterServlet_execute_13()).runTest(request, response);
			(new testcases.CWE89_SQL_Injection.CWE89_SQL_Injection__getParameterServlet_execute_14()).runTest(request, response);
			(new testcases.CWE89_SQL_Injection.CWE89_SQL_Injection__getParameterServlet_execute_16()).runTest(request, response);

			/* END-AUTOGENERATED-SERVLET-TESTS-8 */
		} catch (Throwable t) {

			/* this will only happen on an IOException or something (the runTest for the test cases will catch any exceptions from the test cases).  So, we just abort
			 * and write to the console (since we can't write to the response without possibly throwing another exception)
			 */
			
			System.out.println(
					" Caught thowable from doGetCWE8 ");

			System.out.println(" Throwable's message = " + t.getMessage());
			
			System.out.println("Stack trace below");

			StackTraceElement stes[] = t.getStackTrace();

			for (StackTraceElement ste : stes) {
				System.out.println("  " + ste.toString());
			} 
		}
	}	
	
	private static void doGetCWE9(HttpServletRequest request, HttpServletResponse response) {
		try {
			/* BEGIN-AUTOGENERATED-SERVLET-TESTS-9 */
			(new testcases.CWE90_LDAP_Injection.CWE90_LDAP_Injection__Servlet_connect_tcp_13()).runTest(request, response);
			(new testcases.CWE90_LDAP_Injection.CWE90_LDAP_Injection__Servlet_console_readLine_04()).runTest(request, response);
			(new testcases.CWE90_LDAP_Injection.CWE90_LDAP_Injection__Servlet_Environment_10()).runTest(request, response);
			(new testcases.CWE90_LDAP_Injection.CWE90_LDAP_Injection__Servlet_fromDB_14()).runTest(request, response);
			(new testcases.CWE90_LDAP_Injection.CWE90_LDAP_Injection__Servlet_fromFile_12()).runTest(request, response);
			(new testcases.CWE90_LDAP_Injection.CWE90_LDAP_Injection__Servlet_getCookiesServlet_13()).runTest(request, response);
			(new testcases.CWE90_LDAP_Injection.CWE90_LDAP_Injection__Servlet_getParameterServlet_16()).runTest(request, response);
			(new testcases.CWE90_LDAP_Injection.CWE90_LDAP_Injection__Servlet_getQueryStringServlet_15()).runTest(request, response);
			(new testcases.CWE90_LDAP_Injection.CWE90_LDAP_Injection__Servlet_getQueryStringServlet_16()).runTest(request, response);
			(new testcases.CWE90_LDAP_Injection.CWE90_LDAP_Injection__Servlet_getQueryStringServlet_41()).runTest(request, response);
			(new testcases.CWE90_LDAP_Injection.CWE90_LDAP_Injection__Servlet_listen_tcp_12()).runTest(request, response);

			/* END-AUTOGENERATED-SERVLET-TESTS-9 */
		} catch (Throwable t) {

			/* this will only happen on an IOException or something (the runTest for the test cases will catch any exceptions from the test cases).  So, we just abort
			 * and write to the console (since we can't write to the response without possibly throwing another exception)
			 */
			
			System.out.println(
					" Caught thowable from doGetCWE9 ");

			System.out.println(" Throwable's message = " + t.getMessage());
			
			System.out.println("Stack trace below");

			StackTraceElement stes[] = t.getStackTrace();

			for (StackTraceElement ste : stes) {
				System.out.println("  " + ste.toString());
			} 
		}
	}		
}
